events {
    worker_connections 1024;  # The maximum number of connections that a worker can handle
}

http {
    server {
        listen 5000;  # Listening on port 5000
        server_name 0.0.0.0;  # Accept connections from any IP address

        # Handling WebSocket requests for URLs like /3000, /3001, ..., /3020
        location ~ ^/(300[0-9]|3020)$ {
            set $target_port $1;  # Extract the port number from the URL (e.g., /3002 -> $target_port=3002)

            # Proxy the WebSocket connection to the 'app' container with the correct port
            proxy_pass ws://app:$target_port/browser;

            # WebSocket-specific settings
            proxy_http_version 1.1;  # WebSocket requires HTTP/1.1
            proxy_set_header Upgrade $http_upgrade;  # To upgrade the connection to WebSocket
            proxy_set_header Connection 'upgrade';  # Telling Nginx to upgrade the connection
            proxy_set_header Host $host;  # Forward the original Host header
            proxy_cache_bypass $http_upgrade;  # Bypass cache for WebSocket connections

            # Optional headers to pass through the client's real IP and protocol
            # Uncomment if needed in your setup
            # proxy_set_header X-Real-IP $remote_addr;  # Real client IP
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Forwarded IP chain
            # proxy_set_header X-Forwarded-Proto $scheme;  # Original protocol (http/https)
        }
    }
}
